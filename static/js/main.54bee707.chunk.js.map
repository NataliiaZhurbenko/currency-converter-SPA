{"version":3,"sources":["store/types.js","store/store.js","store/reducers/codeReducer.js","store/actions/currencyCodeActions.js","component/CurrencyConverter/CurrencyConverter.styles.js","component/CurrencyConverter/CurrencyConverter.js","component/AllCurrenciesList/AllCurrenciesList.styles.js","component/AllCurrenciesList/AllCurrenciesList.js","component/NavBar/NavBar.style.js","component/NavBar/NavBar.js","component/ErrorDialog/ErrorDialog.js","App.js","index.js"],"names":["GET_CODES","GET_CODES_UNKNOWN_ERROR","GET_RATE","GET_RATE_UNKNOWN_ERROR","SET_AMOUNT_FROM","GET_ALL_RATES","GET_ALL_RATES_ERROR","GET_ALL_RATES_UNKNOWN_ERROR","CLOSE_ERROR_DIALOG","SET_AMOUNT_FROM_ERROR","SET_COUNTRY_CODE_FROM","SET_COUNTRY_CODE_TO","SET_BASE_COUNTRY_CODE","store","createStore","state","action","newState","type","countryCodes","payload","amountTo","amountFrom","toFixed","allCountriesRates","rates","baseCurrency","base","errorMessage","isErrorDialogOpen","countryCodeFrom","countryCodeTo","baseCountryCode","localStorage","setItem","JSON","stringify","savedState","getItem","parse","getInitialState","CURRENCY_CONVERTER_API_KEY","process","ALL_CURRENCIES_LIST_API_KEY","getCountryCodes","dispatch","a","Axios","get","result","Object","keys","data","results","getConvertRate","url","rate","getAllConvertRates","currencyCodeFrom","response","error","code","useStyles","makeStyles","theme","paper","background","marginTop","spacing","paddingTop","width","height","textAlign","margin","color","green","textTransform","marginRight","marginBottom","submitButton","formControl","createMuiTheme","palette","primary","main","CurrencyConverter","useSelector","useState","localAmountFrom","setLocalAmountFrom","useDispatch","classes","e","preventDefault","isNaN","Number","useEffect","length","Paper","className","TextField","id","variant","label","value","onChange","target","onBlur","autoComplete","FormControl","Select","native","map","index","aria-readonly","ThemeProvider","Button","size","onClick","overflow","maxHeight","AllCurrenciesList","List","ListItem","ListItemText","StyledTabs","withStyles","indicator","display","justifyContent","backgroundColor","maxWidth","props","Tabs","TabIndicatorProps","children","StyledTab","root","fontWeight","typography","fontWeightRegular","fontSize","pxToRem","opacity","Tab","disableRipple","flexGrow","padding","navbar","ROOT_PATH","ALL_CURRENCIES_LIST_HASH","NavBar","tabId","setTabId","location","useLocation","hash","event","nextTabId","selected","component","Link","to","Typography","exact","path","ErrorDialog","React","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54bee707.chunk.js","sourcesContent":["export const GET_CODES = \"GET_CODES\";\r\nexport const GET_CODES_UNKNOWN_ERROR = \"GET_CODES_UNKNOWN_ERROR\";\r\nexport const GET_RATE = \"GET_RATE\";\r\nexport const GET_RATE_UNKNOWN_ERROR = \"GET_RATE_UNKNOWN_ERROR\";\r\nexport const SET_AMOUNT_FROM = \"SET_AMOUNT_FROM\";\r\nexport const GET_ALL_RATES = \"GET_ALL_RATES\";\r\nexport const GET_ALL_RATES_ERROR = \"GET_ALL_RATES_ERROR\";\r\nexport const GET_ALL_RATES_UNKNOWN_ERROR = \"ET_ALL_RATES_UNKNOWN_ERROR\";\r\nexport const CLOSE_ERROR_DIALOG = \"CLOSE_ERROR_DIALOG\";\r\nexport const SET_AMOUNT_FROM_ERROR = \"SET_AMOUNT_FROM_ERROR\";\r\nexport const SET_COUNTRY_CODE_FROM = \"SET_COUNTRY_CODE_FROM\";\r\nexport const SET_COUNTRY_CODE_TO = \"SET_COUNTRY_CODE_TO\";\r\nexport const SET_BASE_COUNTRY_CODE = \"SET_BASE_COUNTRY_CODE\";\r\n","import { createStore } from \"redux\";\r\n\r\nimport { codeReducer, getInitialState } from \"./reducers/codeReducer\";\r\n\r\nconst store = createStore(codeReducer, getInitialState());\r\n\r\nexport default store;\r\n","import {\n  GET_RATE,\n  GET_CODES,\n  SET_AMOUNT_FROM,\n  GET_ALL_RATES,\n  CLOSE_ERROR_DIALOG,\n  GET_ALL_RATES_ERROR,\n  GET_ALL_RATES_UNKNOWN_ERROR,\n  GET_CODES_UNKNOWN_ERROR,\n  GET_RATE_UNKNOWN_ERROR,\n  SET_AMOUNT_FROM_ERROR,\n  SET_COUNTRY_CODE_FROM,\n  SET_COUNTRY_CODE_TO,\n  SET_BASE_COUNTRY_CODE,\n} from \"../types\";\n\nexport function getInitialState() {\n  const savedState = localStorage.getItem(\"data\");\n\n  if (!savedState) {\n    return {\n      countryCodes: [],\n      amountTo: \"\",\n      allCountriesRates: {},\n      errorMessage: \"\",\n      isErrorDialogOpen: false,\n      baseCurrency: \"\",\n      baseCountryCode: \"\",\n      countryCodeFrom: \"\",\n      countryCodeTo: \"\",\n      amountFrom: 1,\n    };\n  }\n\n  return {\n    ...JSON.parse(savedState),\n    amountTo: \"\",\n    allCountriesRates: {},\n  };\n}\n\nexport function codeReducer(state, action) {\n  let newState;\n  switch (action.type) {\n    case GET_CODES:\n      newState = {\n        ...state,\n        countryCodes: action.payload,\n      };\n      break;\n    case GET_RATE:\n      newState = {\n        ...state,\n        amountTo: (action.payload * state.amountFrom).toFixed(2),\n      };\n      break;\n    case SET_AMOUNT_FROM:\n      newState = {\n        ...state,\n        amountFrom: action.payload,\n      };\n      break;\n    case GET_ALL_RATES:\n      newState = {\n        ...state,\n        allCountriesRates: action.payload.rates,\n        baseCurrency: action.payload.base,\n      };\n      break;\n    case GET_ALL_RATES_ERROR:\n      newState = {\n        ...state,\n        allCountriesRates: {},\n        baseCurrency: \"\",\n        errorMessage:\n          \"Current API works only with USD, otherwise please upgrade in https://currencyapi.net/#pricing-sec\",\n        isErrorDialogOpen: true,\n      };\n      break;\n    case CLOSE_ERROR_DIALOG:\n      newState = {\n        ...state,\n        isErrorDialogOpen: false,\n      };\n      break;\n    case SET_COUNTRY_CODE_FROM:\n      newState = {\n        ...state,\n        countryCodeFrom: action.payload,\n      };\n      break;\n    case SET_COUNTRY_CODE_TO:\n      newState = {\n        ...state,\n        countryCodeTo: action.payload,\n      };\n      break;\n    case SET_BASE_COUNTRY_CODE:\n      newState = {\n        ...state,\n        baseCountryCode: action.payload,\n      };\n      break;\n\n    case SET_AMOUNT_FROM_ERROR:\n      newState = {\n        ...state,\n        errorMessage: `Please enter number for amount value`,\n        isErrorDialogOpen: true,\n      };\n      break;\n    case GET_CODES_UNKNOWN_ERROR:\n    case GET_RATE_UNKNOWN_ERROR:\n    case GET_ALL_RATES_UNKNOWN_ERROR:\n      newState = {\n        ...state,\n        errorMessage: `Unknown server error: ${action.payload}`,\n        isErrorDialogOpen: true,\n      };\n      break;\n    default:\n      return state;\n  }\n\n  localStorage.setItem(\"data\", JSON.stringify(newState));\n  return newState;\n}\n","import Axios from \"axios\";\nimport {\n  GET_CODES,\n  GET_RATE,\n  GET_ALL_RATES,\n  GET_ALL_RATES_ERROR,\n  GET_ALL_RATES_UNKNOWN_ERROR,\n  GET_CODES_UNKNOWN_ERROR,\n  GET_RATE_UNKNOWN_ERROR,\n} from \"../types\";\n\nconst CURRENCY_CONVERTER_API_KEY =\n  process.env.REACT_APP_CURRENCY_CONVERTER_API_KEY;\nconst ALL_CURRENCIES_LIST_API_KEY =\n  process.env.REACT_APP_ALL_CURRENCIES_LIST_API_KEY;\n\nexport async function getCountryCodes(dispatch) {\n  try {\n    const result = await Axios.get(\n      `https://free.currconv.com/api/v7/currencies?apiKey=${CURRENCY_CONVERTER_API_KEY}`\n    );\n    dispatch({\n      type: GET_CODES,\n      payload: Object.keys(result.data.results),\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_CODES_UNKNOWN_ERROR,\n      payload: error,\n    });\n  }\n}\n\nexport async function getConvertRate(dispatch, countryCodeFrom, countryCodeTo) {\n  try {\n    const url = `https://free.currconv.com/api/v7/convert?apiKey=${CURRENCY_CONVERTER_API_KEY}&q=${countryCodeFrom}_${countryCodeTo}&compact=ultra`;\n    const result = await Axios.get(url);\n    const rate = result.data[`${countryCodeFrom}_${countryCodeTo}`];\n\n    dispatch({\n      type: GET_RATE,\n      payload: rate,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_RATE_UNKNOWN_ERROR,\n      payload: error,\n    });\n  }\n}\n\nexport async function getAllConvertRates(dispatch, currencyCodeFrom) {\n  try {\n    const result = await Axios.get(\n      `https://currencyapi.net/api/v1/rates?key=${ALL_CURRENCIES_LIST_API_KEY}&base=${currencyCodeFrom}`\n    );\n    dispatch({\n      type: GET_ALL_RATES,\n      payload: {\n        base: result.data.base,\n        rates: result.data.rates,\n      },\n    });\n  } catch (error) {\n    if (error.response.data.error && error.response.data.error.code === 408) {\n      dispatch({\n        type: GET_ALL_RATES_ERROR,\n        payload: error.response.data.error,\n      });\n    } else {\n      dispatch({\n        type: GET_ALL_RATES_UNKNOWN_ERROR,\n        payload: error,\n      });\n    }\n  }\n}\n","import { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    background: \"linear-gradient(45deg, #b388ff 30%, #7c4dff 90%)\",\r\n    marginTop: theme.spacing(12),\r\n    paddingTop: theme.spacing(0.5),\r\n    width: theme.spacing(55),\r\n    height: theme.spacing(38),\r\n    textAlign: \"center\",\r\n    margin: \"auto\",\r\n    \"& > h1\": {\r\n      color: green[300],\r\n      textTransform: \"uppercase\",\r\n    },\r\n    \"& .MuiTextField-root\": {\r\n      marginRight: theme.spacing(2),\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n  submitButton: {\r\n    color: green[50],\r\n    textTransform: \"uppercase\",\r\n  },\r\n  formControl: {\r\n    width: theme.spacing(12),\r\n  },\r\n}));\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[600],\r\n    },\r\n  },\r\n});\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  FormControl,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport {\r\n  getCountryCodes,\r\n  getConvertRate,\r\n} from \"../../store/actions/currencyCodeActions\";\r\nimport { useStyles, theme } from \"./CurrencyConverter.styles\";\r\n\r\nimport {\r\n  SET_AMOUNT_FROM,\r\n  SET_AMOUNT_FROM_ERROR,\r\n  SET_COUNTRY_CODE_FROM,\r\n  SET_COUNTRY_CODE_TO,\r\n} from \"../../store/types\";\r\n\r\nexport default function CurrencyConverter() {\r\n  const countryCodes = useSelector((state) => state.countryCodes);\r\n  const amountTo = useSelector((state) => state.amountTo);\r\n  const countryCodeFrom = useSelector((state) => state.countryCodeFrom);\r\n  const countryCodeTo = useSelector((state) => state.countryCodeTo);\r\n  const amountFrom = useSelector((state) => state.amountFrom);\r\n  const [localAmountFrom, setLocalAmountFrom] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getCountryCodes(dispatch);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      countryCodeFrom === \"\" &&\r\n      countryCodeTo === \"\" &&\r\n      countryCodes.length > 0\r\n    ) {\r\n      dispatch({ type: SET_COUNTRY_CODE_FROM, payload: countryCodes[0] });\r\n      dispatch({ type: SET_COUNTRY_CODE_TO, payload: countryCodes[0] });\r\n    }\r\n  }, [dispatch, countryCodes]);\r\n\r\n  async function convert(e) {\r\n    e.preventDefault();\r\n    if (amountFrom === \"\" || isNaN(Number(amountFrom))) {\r\n      dispatch({ type: SET_AMOUNT_FROM_ERROR });\r\n    } else {\r\n      await getConvertRate(dispatch, countryCodeFrom, countryCodeTo);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.paper}>\r\n        <h1>Currency Converter</h1>\r\n        <form>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-select-currency\"\r\n              variant=\"outlined\"\r\n              label=\"amount\"\r\n              value={localAmountFrom === null ? amountFrom : localAmountFrom}\r\n              onChange={(e) => setLocalAmountFrom(e.target.value)}\r\n              onBlur={(e) =>\r\n                dispatch({ type: SET_AMOUNT_FROM, payload: e.target.value })\r\n              }\r\n              autoComplete=\"off\"\r\n            />\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  type: SET_COUNTRY_CODE_FROM,\r\n                  payload: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <Select native value={countryCodeFrom}>\r\n                {countryCodes.map((code, index) => (\r\n                  <option key={index} value={code}>\r\n                    {code}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-select-currency-native\"\r\n              variant=\"outlined\"\r\n              aria-readonly\r\n              label=\"native currency amount\"\r\n              value={amountTo}\r\n            />\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                dispatch({ type: SET_COUNTRY_CODE_TO, payload: e.target.value })\r\n              }\r\n            >\r\n              <Select native value={countryCodeTo}>\r\n                {countryCodes.map((code, index) => (\r\n                  <option key={index} value={code}>\r\n                    {code}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <ThemeProvider theme={theme}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submitButton}\r\n              size=\"large\"\r\n              onClick={convert}\r\n            >\r\n              Convert\r\n            </Button>\r\n          </ThemeProvider>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    background: \"linear-gradient(45deg, #b388ff 30%, #7c4dff 90%)\",\r\n    marginTop: theme.spacing(15),\r\n    width: theme.spacing(55),\r\n    overflow: \"auto\",\r\n    maxHeight: theme.spacing(65),\r\n    textAlign: \"center\",\r\n    margin: \"auto\",\r\n    \"& > h1\": {\r\n      color: green[300],\r\n      textTransform: \"uppercase\",\r\n    },\r\n  },\r\n  submitButton: {\r\n    color: green[50],\r\n    textTransform: \"uppercase\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    width: theme.spacing(12),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[600],\r\n    },\r\n  },\r\n});\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FormControl, Paper, Select, Button } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {\r\n  getCountryCodes,\r\n  getAllConvertRates,\r\n} from \"../../store/actions/currencyCodeActions\";\r\nimport { useStyles, theme } from \"./AllCurrenciesList.styles\";\r\nimport { SET_BASE_COUNTRY_CODE } from \"../../store/types\";\r\n\r\nexport default function AllCurrenciesList() {\r\n  const countryCodes = useSelector((state) => state.countryCodes);\r\n  const allCountriesRates = useSelector((state) => state.allCountriesRates);\r\n  const baseCurrency = useSelector((state) => state.baseCurrency);\r\n  const baseCountryCode = useSelector((state) => state.baseCountryCode);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getCountryCodes(dispatch);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (baseCountryCode === \"\" && countryCodes.length > 0) {\r\n      dispatch({ type: SET_BASE_COUNTRY_CODE, payload: countryCodes[0] });\r\n    }\r\n  }, [countryCodes, dispatch]);\r\n\r\n  async function getAllRates(e) {\r\n    e.preventDefault();\r\n    await getAllConvertRates(dispatch, baseCountryCode);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.paper}>\r\n        <h1>All currencies list</h1>\r\n        <form>\r\n          <div>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  type: SET_BASE_COUNTRY_CODE,\r\n                  payload: e.target.value,\r\n                })\r\n              }\r\n            >\r\n              <Select native value={baseCountryCode}>\r\n                {countryCodes.map((code, index) => (\r\n                  <option key={index} value={code}>\r\n                    {code}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div></div>\r\n          <ThemeProvider theme={theme}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submitButton}\r\n              size=\"large\"\r\n              onClick={getAllRates}\r\n            >\r\n              Convert\r\n            </Button>\r\n          </ThemeProvider>\r\n        </form>\r\n        <List>\r\n          <ul>\r\n            {Object.keys(allCountriesRates).map((code, id) => (\r\n              <ListItem key={`country-${code}`}>\r\n                <ListItemText\r\n                  primary={`1 ${code} = ${(1 / allCountriesRates[code]).toFixed(\r\n                    2\r\n                  )} ${baseCurrency}`}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </ul>\r\n        </List>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nexport const StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 100,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport const StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: theme.typography.pxToRem(20),\r\n    marginRight: theme.spacing(4),\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  navbar: {\r\n    backgroundColor: \"#b388ff\",\r\n  },\r\n}));\r\n","import { useState, useEffect } from \"react\";\nimport { Route, Switch, Link, useLocation } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CurrencyConverter from \"../CurrencyConverter/CurrencyConverter\";\nimport AllCurrenciesList from \"../AllCurrenciesList/AllCurrenciesList\";\nimport { useStyles, StyledTab, StyledTabs } from \"./NavBar.style\";\n\nconst ROOT_PATH = process.env.REACT_APP_ROOT_PATH;\nconst CURRENCY_CONVERTER_HASH = \"\";\nconst ALL_CURRENCIES_LIST_HASH = \"#all-currencies-list\";\n\nexport default function NavBar() {\n  const [tabId, setTabId] = useState(0);\n\n  const location = useLocation();\n  useEffect(() => {\n    if (location.hash === CURRENCY_CONVERTER_HASH) {\n      setTabId(0);\n    } else {\n      setTabId(1);\n    }\n  }, [location]);\n\n  const handleTabChange = (event, nextTabId) => {\n    setTabId(nextTabId);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.navbar}>\n        <StyledTabs value={tabId} onChange={handleTabChange}>\n          <StyledTab\n            selected\n            label=\"Currency Converter\"\n            component={Link}\n            to={`${ROOT_PATH}${CURRENCY_CONVERTER_HASH}`}\n          />\n          <StyledTab\n            label=\"All Currencies List\"\n            component={Link}\n            to={`${ROOT_PATH}${ALL_CURRENCIES_LIST_HASH}`}\n          />\n        </StyledTabs>\n        <Typography className={classes.padding} />\n      </div>\n      <Route\n        exact\n        path={ROOT_PATH}\n        component={({ location }) =>\n          location.hash === CURRENCY_CONVERTER_HASH && <CurrencyConverter />\n        }\n      />\n      <Route\n        exact\n        path={ROOT_PATH}\n        component={({ location }) =>\n          location.hash === ALL_CURRENCIES_LIST_HASH && <AllCurrenciesList />\n        }\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CLOSE_ERROR_DIALOG } from \"../../store/types\";\r\n\r\nexport default function ErrorDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const errorMessage = useSelector((state) => state.errorMessage);\r\n  const dispatch = useDispatch();\r\n  const isErrorDialogOpen = useSelector((state) => state.isErrorDialogOpen);\r\n\r\n  useEffect(() => {\r\n    setOpen(isErrorDialogOpen);\r\n  }, [isErrorDialogOpen]);\r\n\r\n  const handleClose = () => {\r\n    dispatch({ type: CLOSE_ERROR_DIALOG });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">ERROR</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <strong>{errorMessage}</strong>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import NavBar from \"./component/NavBar/NavBar\";\r\nimport ErrorDialog from \"./component/ErrorDialog/ErrorDialog\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <ErrorDialog />\r\n    </Router>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}